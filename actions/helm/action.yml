name: Deploy
description: "Deploy"
branding:
  icon: 'cloud'
  color: 'orange'
inputs:
  hub:
    description: "The hub"
    required: true
  environment:
    description: "The env."
    required: true
  dry-run:
    description: "Dry Run test"
    required: false
    default: "false"
  aws-region:
    description: "AWS Region"
    required: true
  aws-role:
    description: "The role to access the eks."
    required: true
  aws-cicd-role:
    description: "The role to assume the eks."
    required: true
  service:
    description: 'The service name'
    required: true
  timeout:
    description: 'The helm upgrade timeout'
    required: false
    default: "15m"
  release-version:
    description: "The release version"
    required: true
  namespace:
    description: "The eks namespace"
    required: false
  helm-vars:
    description: 'The List of helm vars'
    required: false
  file-args:
    description: "File Args"
    required: false
  eks-name:
    description: "The eks name"
    required: true

runs:
  using: "composite"
  steps:
    - name: Assume CICD Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.aws-cicd-role }}
        role-skip-session-tagging: true
        role-chaining: false

    - name: Assume Kubernetes Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.aws-role }}
        role-skip-session-tagging: true
        role-chaining: true

    - name: Helm details
      run: |
        aws sts get-caller-identity
        echo "Inputs: ${{ toJSON(inputs) }}"
      shell: bash

    - name: Update Kubeconfig
      run: aws eks update-kubeconfig --name ${{inputs.eks-name}} --region ${{inputs.aws-region}} --alias ${{inputs.hub}}-${{inputs.environment}}
      shell: bash

    - name: Prepare
      id: prepare
      run: python ${{ github.action_path }}/translate-helm-vars.py
      shell: bash
      env:
        INPUT_HELM_VARS: ${{ inputs.helm-vars }}

    - name: Run Helm
      run: |
        sed -i 's/%APP_VERSION%/'${{ inputs.release-version}}'/g' kubernetes/Chart.yaml
        sed -i 's/%APP_NAME%/'${{ inputs.service}}'/g' kubernetes/Chart.yaml
        EKS_VERSION=$(aws eks describe-cluster --name ${{inputs.eks-name}} --region ${{inputs.aws-region}} | jq .cluster.version -r | tr -d '\\n\')
        EXTRA_HELM_FILES="${FILE_ARGS:--f kubernetes/values/common.yaml -f kubernetes/values/${{ inputs.hub }}/${{ inputs.environment}}.yaml}"
        helm upgrade --install ${{ inputs.dry-run == 'true' && '--dry-run' || '' }} --atomic --timeout ${{inputs.timeout}} ${{ 
        inputs.service }} kubernetes --namespace ${{inputs.namespace}} ${{steps.prepare.outputs.HELM_VARS }} --set-string releaseVersion=${{ inputs.release-version}} --set-string clusterName=${{inputs.eks-name}}  --set-string clusterVersion=${EKS_VERSION} ${EXTRA_HELM_FILES}
      shell: bash
      env:
        FILE_ARGS: ${{ inputs.file-args}}
